replicaCount: 1

image:
  repository: kruft/dockerhub-pulllimits-exporter
  pullPolicy: Always
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8881

ingress:
  enabled: false
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: '/'
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

metrics:
  serviceMonitor:
    enabled: true
    additionalLabels: {}
    # namespace: monitoring
    interval: 5m
    scrapeTimeout: 30s
  prometheusRule:
    enabled: true
    additionalLabels: {}
    # namespace: monitoring
    rules:
      - alert: DockerHubPullsLimitExhausted
        expr: dockerhub_limit_remaining_requests_total < 5
        for: 15m
        labels:
         severity: critical
        annotations:
         description: Too few allowed image pulls remained
         summary: Less than 5 allowed pulls remained before DockerHub limit will be reached
